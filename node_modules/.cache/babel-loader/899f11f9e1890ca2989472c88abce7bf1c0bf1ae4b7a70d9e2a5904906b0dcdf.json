{"ast":null,"code":"var _jsxFileName = \"/Users/sofiafaria/Documents/_WebDevelopment/facerecognition/src/App.js\";\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from \"react-tsparticles\";\nimport Register from './components/Register/Register';\nimport Signin from './components/Signin/Signin';\nimport './App.css';\nimport { Component } from 'react';\nimport { loadFull } from 'tsparticles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_ID = 'sofiafaria';\n// Your PAT (Personal Access Token) can be found in the portal under Authentification\nconst PAT = 'e0421aebab5a44699c0f0c65f5b76c1a';\nconst APP_ID = 'face-recognition';\n// Change these to whatever model and image URL you want to use\nconst MODEL_ID = 'face-detection';\nconst MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\nconst particlesOptions = {\n  background: {\n    color: {\n      value: \"none\"\n    }\n  },\n  fpsLimit: 120,\n  interactivity: {\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"push\"\n      },\n      onHover: {\n        enable: true,\n        mode: \"repulse\"\n      },\n      resize: true\n    },\n    modes: {\n      bubble: {\n        distance: 400,\n        duration: 2,\n        opacity: 0.8,\n        size: 40\n      },\n      push: {\n        quantity: 4\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4\n      }\n    }\n  },\n  particles: {\n    color: {\n      value: \"#ffffff\"\n    },\n    links: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1\n    },\n    collisions: {\n      enable: true\n    },\n    move: {\n      directions: \"none\",\n      enable: true,\n      outModes: {\n        default: \"bounce\"\n      },\n      random: false,\n      speed: 6,\n      straight: false\n    },\n    number: {\n      density: {\n        enable: true,\n        area: 800\n      },\n      value: 80\n    },\n    opacity: {\n      value: 0.5\n    },\n    shape: {\n      type: \"circle\"\n    },\n    size: {\n      value: {\n        random: true,\n        value: 5\n      }\n    }\n  },\n  detectRetina: true\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifyFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifyFace.left_col * width,\n        topRow: clarifyFace.top_row * height,\n        rightCol: width - clarifyFace.right_col * width,\n        bottomRow: height - clarifyFace.bottom_row * height\n      };\n    };\n    this.displayFacebox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n        },\n        body: raw\n      };\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.json()).then(result => {\n        if (result) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n          this.displayFacebox(this.calculateFaceLocation(result));\n        }\n      }).catch(error => console.log('error', error));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.particlesInit = async engine => {\n      await loadFull(engine);\n    };\n    this.particlesLoaded = async container => {\n      await console.log(container);\n    };\n    this.state = initialState;\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        id: \"tsparticles\",\n        init: this.particlesInit,\n        loaded: this.particlesLoaded,\n        options: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this) : route === 'signin' || route === 'signout' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["FaceRecognition","Navigation","Logo","ImageLinkForm","Rank","Particles","Register","Signin","Component","loadFull","USER_ID","PAT","APP_ID","MODEL_ID","MODEL_VERSION_ID","particlesOptions","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","links","width","collisions","move","directions","outModes","default","random","speed","straight","number","density","area","shape","type","detectRetina","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","calculateFaceLocation","data","clarifyFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFacebox","setState","loadUser","onInputChange","event","target","onButtonSubmit","state","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","json","result","count","Object","assign","catch","error","console","log","onRouteChange","particlesInit","engine","particlesLoaded","container","render"],"sources":["/Users/sofiafaria/Documents/_WebDevelopment/facerecognition/src/App.js"],"sourcesContent":["import FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from \"react-tsparticles\";\nimport Register from './components/Register/Register';\nimport Signin from './components/Signin/Signin';\nimport './App.css';\nimport { Component } from 'react';\nimport { loadFull } from 'tsparticles';\n\nconst USER_ID = 'sofiafaria';\n// Your PAT (Personal Access Token) can be found in the portal under Authentification\nconst PAT = 'e0421aebab5a44699c0f0c65f5b76c1a';\nconst APP_ID = 'face-recognition';\n// Change these to whatever model and image URL you want to use\nconst MODEL_ID = 'face-detection';\nconst MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';    \n\n\nconst particlesOptions = {\n  background: {\n      color: {\n          value: \"none\",\n      },\n  },\n  fpsLimit: 120,\n  interactivity: {\n      events: {\n          onClick: {\n              enable: true,\n              mode: \"push\",\n          },\n          onHover: {\n              enable: true,\n              mode: \"repulse\",\n          },\n          resize: true,\n      },\n      modes: {\n          bubble:{\n            distance: 400,\n            duration: 2,\n            opacity: 0.8,\n            size: 40\n          },\n          push: {\n              quantity: 4,\n          },\n          repulse: {\n              distance: 200,\n              duration: 0.4,\n          },\n      },\n  },\n  particles: {\n      color: {\n          value: \"#ffffff\",\n      },\n      links: {\n          color: \"#ffffff\",\n          distance: 150,\n          enable: true,\n          opacity: 0.5,\n          width: 1,\n      },\n      collisions: {\n          enable: true,\n      },\n      move: {\n          directions: \"none\",\n          enable: true,\n          outModes: {\n              default: \"bounce\",\n          },\n          random: false,\n          speed: 6,\n          straight: false,\n      },\n      number: {\n          density: {\n              enable: true,\n              area: 800,\n          },\n          value: 80,\n      },\n      opacity: {\n          value: 0.5,\n      },\n      shape: {\n          type: \"circle\",\n      },\n      size: {\n          value: { random: true, value:5 },\n      },\n  },\n  detectRetina: true,\n};\n\nconst initialState = {\n  input: '',\n  imageUrl:'',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email:'',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state =initialState\n  }\n\n  calculateFaceLocation = (data) =>{\n    const clarifyFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifyFace.left_col * width,\n      topRow: clarifyFace.top_row * height,\n      rightCol: width - (clarifyFace.right_col * width),\n      bottomRow: height - (clarifyFace.bottom_row * height)\n    }\n  }\n\n  displayFacebox = (box) =>{\n    this.setState({box: box});\n  }\n\n  loadUser = (data) =>{\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () =>{\n    this.setState({imageUrl: this.state.input});\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": this.state.input\n                  }\n              }\n          }\n      ]\n  });\n  \n  const requestOptions = {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n      },\n      body: raw\n  };\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\n    .then(response => response.json())\n    .then(result => {\n      if(result){\n        fetch('http://localhost:3000/image',{\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        }).then(response =>response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries: count}))\n        });\n        this.displayFacebox(this.calculateFaceLocation(result))\n      }\n    })\n    .catch(error => console.log('error', error));\n  }\n\n  onRouteChange = (route) =>{\n    if(route === 'signout'){\n      this.setState(initialState);\n    }else if(route === 'home'){\n      this.setState({ isSignedIn: true})\n    }\n    this.setState({route : route});\n\n  }\n\n\n  particlesInit =  async engine =>{\n    await loadFull(engine);\n  }\n\n  particlesLoaded = async container =>{\n  await console.log(container);\n  };\n  \n\n  render() {\n    const {isSignedIn, imageUrl, route, box} = this.state;\n    return(\n    <div className=\"App\">\n       <Particles\n            id=\"tsparticles\"\n            init={this.particlesInit}\n            loaded={this.particlesLoaded}\n            options={particlesOptions}\n        />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n     {route ==='home' \n        ? <div>\n        <Logo />\n        <Rank name={this.state.user.name} entries={this.state.user.entries} />\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition box={box} imageUrl={imageUrl}/>\n        </div>\n        : (\n          (route==='signin' || route ==='signout')\n          ? <Signin loadUser={this.loadUser} onRouteChange = {this.onRouteChange}/> \n          : <Register loadUser={this.loadUser} onRouteChange = {this.onRouteChange}/>\n          ) }\n    </div>\n  )};\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}