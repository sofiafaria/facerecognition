{"ast":null,"code":"import { getHslAnimationFromHsl, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n  var _a, _b;\n  const colorValue = value;\n  if (!colorValue || !colorValue.enable) {\n    return;\n  }\n  const offset = randomInRange(valueAnimation.offset),\n    velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6,\n    decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n  if (!decrease || colorValue.status === \"increasing\") {\n    colorValue.value += velocity;\n    if (decrease && colorValue.value > max) {\n      colorValue.status = \"decreasing\";\n      colorValue.value -= colorValue.value % max;\n    }\n  } else {\n    colorValue.value -= velocity;\n    if (colorValue.value < 0) {\n      colorValue.status = \"increasing\";\n      colorValue.value += colorValue.value;\n    }\n  }\n  if (colorValue.velocity && decay !== 1) {\n    colorValue.velocity *= decay;\n  }\n  if (colorValue.value > max) {\n    colorValue.value %= max;\n  }\n}\nfunction updateStrokeColor(particle, delta) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n  if (!((_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color)) {\n    return;\n  }\n  const animationOptions = particle.stroke.color.animation,\n    h = (_c = (_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h) !== null && _c !== void 0 ? _c : (_d = particle.color) === null || _d === void 0 ? void 0 : _d.h;\n  if (h) {\n    updateColorValue(delta, h, animationOptions.h, 360, false);\n  }\n  const s = (_f = (_e = particle.strokeColor) === null || _e === void 0 ? void 0 : _e.s) !== null && _f !== void 0 ? _f : (_g = particle.color) === null || _g === void 0 ? void 0 : _g.s;\n  if (s) {\n    updateColorValue(delta, s, animationOptions.s, 100, true);\n  }\n  const l = (_j = (_h = particle.strokeColor) === null || _h === void 0 ? void 0 : _h.l) !== null && _j !== void 0 ? _j : (_k = particle.color) === null || _k === void 0 ? void 0 : _k.l;\n  if (l) {\n    updateColorValue(delta, l, animationOptions.l, 100, true);\n  }\n}\nexport class StrokeColorUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    var _a, _b;\n    const container = this.container;\n    particle.stroke = itemFromSingleOrMultiple(particle.options.stroke, particle.id, particle.options.reduceDuplicates);\n    particle.strokeWidth = particle.stroke.width * container.retina.pixelRatio;\n    const strokeHslColor = (_a = rangeColorToHsl(particle.stroke.color)) !== null && _a !== void 0 ? _a : particle.getFillColor();\n    if (strokeHslColor) {\n      particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, (_b = particle.stroke.color) === null || _b === void 0 ? void 0 : _b.animation, container.retina.reduceFactor);\n    }\n  }\n  isEnabled(particle) {\n    var _a, _b, _c, _d;\n    const color = (_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color;\n    return !particle.destroyed && !particle.spawning && !!color && (((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h.value) !== undefined && color.animation.h.enable || ((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.s.value) !== undefined && color.animation.s.enable || ((_d = particle.strokeColor) === null || _d === void 0 ? void 0 : _d.l.value) !== undefined && color.animation.l.enable);\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateStrokeColor(particle, delta);\n  }\n}","map":{"version":3,"names":["getHslAnimationFromHsl","itemFromSingleOrMultiple","randomInRange","rangeColorToHsl","updateColorValue","delta","value","valueAnimation","max","decrease","_a","_b","colorValue","enable","offset","velocity","factor","decay","status","updateStrokeColor","particle","_c","_d","_e","_f","_g","_h","_j","_k","stroke","color","animationOptions","animation","h","strokeColor","s","l","StrokeColorUpdater","constructor","container","init","options","id","reduceDuplicates","strokeWidth","width","retina","pixelRatio","strokeHslColor","getFillColor","reduceFactor","isEnabled","destroyed","spawning","undefined","update"],"sources":["/Users/sofiafaria/Documents/_WebDevelopment/facerecognition/node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js"],"sourcesContent":["import { getHslAnimationFromHsl, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue || !colorValue.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = \"decreasing\";\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateStrokeColor(particle, delta) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    if (!((_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color)) {\n        return;\n    }\n    const animationOptions = particle.stroke.color.animation, h = (_c = (_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h) !== null && _c !== void 0 ? _c : (_d = particle.color) === null || _d === void 0 ? void 0 : _d.h;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    const s = (_f = (_e = particle.strokeColor) === null || _e === void 0 ? void 0 : _e.s) !== null && _f !== void 0 ? _f : (_g = particle.color) === null || _g === void 0 ? void 0 : _g.s;\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    const l = (_j = (_h = particle.strokeColor) === null || _h === void 0 ? void 0 : _h.l) !== null && _j !== void 0 ? _j : (_k = particle.color) === null || _k === void 0 ? void 0 : _k.l;\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a, _b;\n        const container = this.container;\n        particle.stroke = itemFromSingleOrMultiple(particle.options.stroke, particle.id, particle.options.reduceDuplicates);\n        particle.strokeWidth = particle.stroke.width * container.retina.pixelRatio;\n        const strokeHslColor = (_a = rangeColorToHsl(particle.stroke.color)) !== null && _a !== void 0 ? _a : particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, (_b = particle.stroke.color) === null || _b === void 0 ? void 0 : _b.animation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        const color = (_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h.value) !== undefined && color.animation.h.enable) ||\n                (((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.s.value) !== undefined && color.animation.s.enable) ||\n                (((_d = particle.strokeColor) === null || _d === void 0 ? void 0 : _d.l.value) !== undefined && color.animation.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}